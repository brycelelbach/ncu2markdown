    Section: GPU Speed Of Light Throughput
    ----------------------- ----------- -------------
    Metric Name             Metric Unit  Metric Value
    ----------------------- ----------- -------------
    DRAM Frequency                  Ghz          5.01
    SM Frequency                    Mhz        585.00
    Elapsed Cycles                cycle    12,196,559
    Memory Throughput                 %         61.71
    DRAM Throughput                   %         61.71
    Duration                         ms         20.85
    L1/TEX Cache Throughput           %         18.27
    L2 Cache Throughput               %          8.46
    SM Active Cycles              cycle 12,168,381.57
    Compute (SM) Throughput           %          1.31
    ----------------------- ----------- -------------

    OPT   Memory is more heavily utilized than Compute: Look at the Memory Workload Analysis section to identify the
          DRAM bottleneck. Check memory replay (coalescing) metrics to make sure you're efficiently utilizing the
          bytes transferred. Also consider whether it is possible to do more work per memory access (kernel fusion) or
          whether there are values you can (re)compute.

    Section: GPU Speed Of Light Roofline Chart
    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 32:1. The kernel achieved 0% of
          this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline
          analysis.

    Section: PM Sampling
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Maximum Buffer Size             Mbyte         3.54
    Dropped Samples                sample            0
    Maximum Sampling Interval       cycle       40,000
    # Pass Groups                                    1
    ------------------------- ----------- ------------

    Section: Compute Workload Analysis
    -------------------- ----------- ------------
    Metric Name          Metric Unit Metric Value
    -------------------- ----------- ------------
    Executed Ipc Active   inst/cycle         0.03
    Executed Ipc Elapsed  inst/cycle         0.03
    Issue Slots Busy               %         0.83
    Issued Ipc Active     inst/cycle         0.03
    SM Busy                        %         1.14
    -------------------- ----------- ------------

    OPT   Est. Local Speedup: 98.86%
          All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps
          per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details.

    Section: Memory Workload Analysis
    ----------------- ----------- ------------
    Metric Name       Metric Unit Metric Value
    ----------------- ----------- ------------
    Memory Throughput     Gbyte/s       197.74
    Mem Busy                    %         6.92
    Max Bandwidth               %        61.71
    L1/TEX Hit Rate             %         0.63
    L2 Hit Rate                 %         4.69
    Mem Pipes Busy              %         1.31
    ----------------- ----------- ------------

    Section: Memory Workload Analysis Chart
    WRN   The optional metric lts__average_gcomp_input_sector_success_rate.pct could not be found. Collecting it as an
          additional metric could enable the rule to provide more guidance.

    Section: Memory Workload Analysis Tables
    OPT   Est. Speedup: 44.99%
          The memory access pattern for global loads from DRAM might not be optimal. On average, only 8.0 of the 32
          bytes transmitted per sector are utilized by each thread. This applies to the 97.7% of sectors missed in L2.
          This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced
          global loads.
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 42.79%
          The memory access pattern for global stores to DRAM might not be optimal. On average, only 8.0 of the 32
          bytes transmitted per sector are utilized by each thread. This applies to the 93.0% of sectors missed in L2.
          This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced
          global stores.

    Section: Scheduler Statistics
    ---------------------------- ----------- ------------
    Metric Name                  Metric Unit Metric Value
    ---------------------------- ----------- ------------
    One or More Eligible                   %         0.83
    Issued Warp Per Scheduler                        0.01
    No Eligible                            %        99.17
    Active Warps Per Scheduler          warp         7.71
    Eligible Warps Per Scheduler        warp         0.01
    ---------------------------- ----------- ------------

    OPT   Est. Local Speedup: 38.29%
          Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only
          issues an instruction every 121.1 cycles. This might leave hardware resources underutilized and may lead to
          less optimal performance. Out of the maximum of 8 warps per scheduler, this kernel allocates an average of
          7.71 active warps per scheduler, but only an average of 0.01 warps were eligible per cycle. Eligible warps
          are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible
          warp results in no instruction being issued and the issue slot remains unused. To increase the number of
          eligible warps, avoid possible load imbalances due to highly different execution durations per warp.
          Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.

    Section: Warp State Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Warp Cycles Per Issued Instruction             cycle       933.64
    Warp Cycles Per Executed Instruction           cycle       934.19
    Avg. Active Threads Per Warp                                   32
    Avg. Not Predicated Off Threads Per Warp                    31.95
    ---------------------------------------- ----------- ------------

    OPT   Est. Speedup: 38.29%
          On average, each warp of this kernel spends 486.1 cycles being stalled waiting for a scoreboard dependency on
          a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited
          upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the
          memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by
          increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently
          used data to shared memory. This stall type represents about 52.1% of the total average of 933.6 cycles
          between issuing two instructions.
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 38.29%
          On average, each warp of this kernel spends 441.8 cycles being stalled waiting for the L1 instruction queue
          for local and global (LG) memory operations to be not full. Typically, this stall occurs only when executing
          local or global memory instructions extremely frequently. Avoid redundant global memory accesses. Try to
          avoid using thread-local memory by checking if dynamically indexed arrays are declared in local scope, of if
          the kernel has excessive register pressure causing by spills. If applicable, consider combining multiple
          lower-width memory operations into fewer wider memory operations and try interleaving memory operations and
          math instructions. This stall type represents about 47.3% of the total average of 933.6 cycles between
          issuing two instructions.
    ----- --------------------------------------------------------------------------------------------------------------
    INF   Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on
          sampling data. The Kernel Profiling Guide
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details
          on each stall reason.

    Section: Instruction Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Avg. Executed Instructions Per Scheduler        inst   100,659.20
    Executed Instructions                           inst   16,105,472
    Avg. Issued Instructions Per Scheduler          inst   100,718.20
    Issued Instructions                             inst   16,114,912
    ---------------------------------------- ----------- ------------

    Section: Launch Statistics
    -------------------------------- --------------- ---------------
    Metric Name                          Metric Unit    Metric Value
    -------------------------------- --------------- ---------------
    Block Size                                                   256
    Function Cache Configuration                     CachePreferNone
    Grid Size                                                  1,024
    Registers Per Thread             register/thread              32
    Shared Memory Configuration Size           Kbyte           32.77
    Driver Shared Memory Per Block        byte/block               0
    Dynamic Shared Memory Per Block       byte/block               0
    Static Shared Memory Per Block        byte/block               0
    # SMs                                         SM              40
    Threads                                   thread         262,144
    Uses Green Context                                             0
    Waves Per SM                                                6.40
    -------------------------------- --------------- ---------------

    Section: Occupancy
    ------------------------------- ----------- ------------
    Metric Name                     Metric Unit Metric Value
    ------------------------------- ----------- ------------
    Block Limit SM                        block           16
    Block Limit Registers                 block            8
    Block Limit Shared Mem                block           16
    Block Limit Warps                     block            4
    Theoretical Active Warps per SM        warp           32
    Theoretical Occupancy                     %          100
    Achieved Occupancy                        %        96.54
    Achieved Active Warps Per SM           warp        30.89
    ------------------------------- ----------- ------------

    Section: GPU and Memory Workload Distribution
    -------------------------- ----------- -------------
    Metric Name                Metric Unit  Metric Value
    -------------------------- ----------- -------------
    Average DRAM Active Cycles       cycle    64,417,481
    Total DRAM Elapsed Cycles        cycle   835,033,088
    Average L1 Active Cycles         cycle 12,168,381.57
    Total L1 Elapsed Cycles          cycle   491,382,808
    Average L2 Active Cycles         cycle 17,765,451.81
    Total L2 Elapsed Cycles          cycle   570,423,200
    Average SM Active Cycles         cycle 12,168,381.57
    Total SM Elapsed Cycles          cycle   491,382,808
    Average SMSP Active Cycles       cycle 12,197,022.93
    Total SMSP Elapsed Cycles        cycle 1,965,531,232
    -------------------------- ----------- -------------

    Section: Source Counters
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Branch Instructions Ratio           %         0.01
    Branch Instructions              inst      155,648
    Branch Efficiency                   %          100
    Avg. Divergent Branches                          0
    ------------------------- ----------- ------------

    OPT   Est. Speedup: 74.75%
          This kernel has uncoalesced global accesses resulting in a total of 25165824 excessive sectors (75% of the
          total 33554432 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source
          locations. The CUDA Programming Guide
          (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional
          information on reducing uncoalesced device memory accesses.
